
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yqneprfldcikcnujhqby.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlxbmVwcmZsZGNpa2NudWpocWJ5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ5NzA0NDAsImV4cCI6MjA2MDU0NjQ0MH0.QFzn3BtfnvlIbhcVCCQxCW8cGwr_egQWtd5dflGYs8I";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

const supabaseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create a type that extends the SupabaseClient with our custom method
type SupabaseClientWithHelpers = typeof supabaseClient & {
  getStorageUrl: (bucketName: string) => string;
};

// Cast the client to our extended type and add the helper method
const supabase = supabaseClient as SupabaseClientWithHelpers;

// Add a helper method for getting storage URLs
supabase.getStorageUrl = (bucketName: string) => {
  return `${SUPABASE_URL}/storage/v1/object/public/${bucketName}`;
};

// Export the modified client
export { supabase };
